plugins {
    // TODO actually need this plugin?
    id 'com.github.johnrengelman.shadow'            version '5.2.0'                 apply false
    id "me.champeau.gradle.jmh"                     version "0.5.0"                 apply true
    id 'java-library' apply true

    // to find unused dependencies
    //id "ca.cutterslade.analyze" version "1.4.1" apply true
}

apply from: 'gradle/dependencies.gradle'
apply from: 'gradle/version.gradle'

group 'org.florentind'
version '1.0-SNAPSHOT'

description = 'Benchmark GraphBLAS in Java'

repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    // for pregel-bootstrap
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    annotationProcessor group: 'org.neo4j.gds',            name: 'annotations',         version: ver.gds
    annotationProcessor group: 'org.neo4j.gds',            name: 'config-generator',    version: ver.gds
    annotationProcessor group: 'org.immutables',           name: 'builder',             version: ver.'immutables'
    annotationProcessor group: 'org.immutables',           name: 'value',               version: ver.'immutables'
    annotationProcessor group: 'org.neo4j',                name: 'annotations',         version: ver.'neo4j'

    compileOnly         group: 'org.immutables',           name: 'builder',             version: ver.'immutables'
    compileOnly         group: 'org.immutables',           name: 'value-annotations',   version: ver.'immutables'
    compileOnly         group: 'org.jetbrains',            name: 'annotations',         version: ver.'jetbrains-annotations'


    compileOnly         group: 'org.ejml',                 name: 'ejml-all',        version: ver.ejml
    // TODO: this is locally installed !
    implementation      group: 'com.github.fabianmurariu',  name: 'graphblas-package',  version: ver.'graphblas-package'
    implementation      group: 'org.jgrapht',           name: 'jgrapht-core',          version: ver.jgrapht
    implementation      group: 'org.jgrapht',           name: 'jgrapht-opt',           version: ver.jgrapht
    implementation      group: 'org.neo4j.gds',         name: 'core',                version: ver.gds
    implementation      group: 'org.neo4j.gds',         name: 'proc',                version: ver.gds
    implementation      group: 'org.neo4j.gds',         name: 'proc-embeddings',     version: ver.gds
    implementation      group: 'org.neo4j.gds',         name: 'alpha-embeddings',    version: ver.gds
    // TODO: find out why this is needed for the benchmarks
    implementation      group: 'org.neo4j.gds',            name: 'test-utils',      version: ver.gds

    // jmh dependencies
    // TODO: try out which ones can be removed
    jmhAnnotationProcessor group: 'org.neo4j.gds',      name: 'annotations',         version: ver.gds
    jmhAnnotationProcessor group: 'org.immutables',     name: 'value',               version: ver.'immutables'
    jmhCompileOnly         group: 'org.immutables',     name: 'builder',            version: ver.'immutables'
    jmhCompileOnly         group: 'org.immutables',     name: 'value-annotations',   version: ver.'immutables'

    jmhImplementation      group: 'org.neo4j.gds',      name: 'proc',                version: ver.gds
    jmhImplementation      group: 'org.neo4j.gds',      name: 'proc-embeddings',     version: ver.gds
    jmhImplementation      group: 'org.neo4j.gds',      name: 'alpha-algo',          version: ver.gds
    jmhImplementation      group: 'org.neo4j.gds',      name: 'alpha-embeddings',    version: ver.gds
//    jmhImplementation      group: 'org.neo4j.gds',         name: 'core',                version: ver.gds
    //jmhImplementation      group: 'org.neo4j.gds',         name: 'neo4j-kernel-adapter',                version: ver.gds
//    jmhCompile             name: 'pregel-bootstrap'
    jmhCompile             group: 'org.neo4j.gds',      name: 'algo',                version: ver.gds


    jmh group: 'com.github.rvesse',       name: 'airline',                  version: ver.'airline'
    jmh group: 'net.jodah',               name: 'failsafe',                 version: ver.'failsafe'
    jmh group: 'commons-configuration',   name: 'commons-configuration',    version: '1.10'


    jmh("org.openjdk.jmh:jmh-core:${ver.jmh}")
    jmh("org.openjdk.jmh:jmh-generator-annprocess:${ver.jmh}")

    testCompile (
            platform(dep.junit5bom),
            dep.junit5jupiter
    )

    testImplementation group: 'org.ejml',       name: 'ejml-all',           version: ver.'ejml'
    testCompileOnly group: 'org.immutables',    name: 'value-annotations',  version: ver.'immutables'
    testCompileOnly group: 'org.immutables',    name: 'builder',            version: ver.'immutables'
    testCompileOnly group: 'org.jetbrains',     name: 'annotations',        version: ver.'jetbrains-annotations'
    testCompileOnly  group: 'org.neo4j.gds',    name: 'test-utils',          version: ver.gds
    testCompileOnly  group: 'org.neo4j.gds',    name: 'algo',          version: ver.gds

    // pregel/jmh tests (should be moved to a seperate jmhTest folder?!)
    testCompile         name: 'pregel-bootstrap'
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }
}

jmhJar {
    manifest {
        attributes([
                'Implementation-Version': ver.'neo4j'
        ])

    }
}

jmh {
    zip64 = true
    forceGC = true

    // regExp which benchmarks to run
    // ejmlSparseBfsLevel
    include = ['.*jGraphTBfsLevel*']
    exclude = ['.*GraphImpl.*']
    // TODO actually avoid duplicate dependencies
    duplicateClassesStrategy = 'exclude'

    // ! increase -Xmx and set -Xms to equal value on server if needed .. f.i. "-Xmx32g"
    jvmArgs = ["-Xms32g", "-Xmx32g", "-XX:+UseSuperWord"]
}

task simpleBenchmark(type:JavaExec) {
    classpath = sourceSets.jmh.runtimeClasspath
    String datasetDir = project.hasProperty("datasetDir") ? getProperty("datasetDir") : ""
    environment "GRB_JAVA_DATASETS", datasetDir
    maxHeapSize="32G"
    minHeapSize="32G"

    main = project.hasProperty("mainClass") ? getProperty("mainClass") : "NULL"
}
